name: sql

on:
  push:
    branches: [ sql ]

jobs:
  testGeneral:
    name: General test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v6
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Test
      run: |
        go test -v -count 1 -p 1 -cover -coverprofile=coverage_general.txt .
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: general
        name: general

  testMssql:
    name: Test with MSSQL
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v6
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Start MSSQL server
      run: docker run -d --name mssql-express -e ACCEPT_EULA=Y -e SA_PASSWORD=SecretPassword1 -e MSSQL_PID=Express -p 1433:1433 mcr.microsoft.com/mssql/server:2019-latest
    - name: Test
      run: |
        export TIMEZONE="Asia/Ho_Chi_Minh"
        export MSSQL_DRIVER="sqlserver"
        export MSSQL_URL="sqlserver://sa:SecretPassword1@localhost:1433?database=tempdb"
        go test -v -count 1 -p 1 -cover -coverprofile=coverage_mssql.txt ./sql
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: mssql
        name: mssql

  testMysql:
    name: Test with MySQL
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v6
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Start MySQL server
      run: docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=test -e MYSQL_DATABASE=test -e MYSQL_USER=test -e MYSQL_PASSWORD=test -p 3306:3306 mysql:8
    - name: Test
      run: |
        export TIMEZONE="Asia/Ho_Chi_Minh"
        export MYSQL_DRIVER="mysql"
        export MYSQL_URL="test:test@tcp(localhost:3306)/test?charset=utf8mb4,utf8&parseTime=false&loc=\${loc}"
        go test -v -count 1 -p 1 -cover -coverprofile=coverage_mysql.txt ./sql
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: mysql
        name: mysql

  testPostgresql:
    name: Test with PostgreSQL
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v6
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Start PostgreSQL server
      run: docker run -d --name postgres -e POSTGRES_DB=test -e POSTGRES_USER=test -e POSTGRES_PASSWORD=test -p 5432:5432 postgres:11
    - name: Test
      run: |
        export TIMEZONE="Asia/Ho_Chi_Minh"
        export PGSQL_DRIVER="pgx"
        export PGSQL_URL="postgres://test:test@localhost:5432/test?sslmode=disable&client_encoding=UTF-8&application_name=godal"
        go test -v -count 1 -p 1 -cover -coverprofile=coverage_pgsql.txt ./sql
        bash <(curl -s https://codecov.io/bash) -cF pgsql
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: pgsql
        name: pgsql

  testSqlite:
    name: Test with SQLite
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v6
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Test
      run: |
        export TIMEZONE="Asia/Ho_Chi_Minh"
        mkdir ./temp
        export SQLITE_DRIVER="sqlite3"
        export SQLITE_URL="./temp/temp.db"
        go test -v -count 1 -p 1 -cover -coverprofile=coverage_sqlite.txt ./sql
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: sqlite
        name: sqlite
