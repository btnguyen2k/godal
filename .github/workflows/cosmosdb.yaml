name: sql

on:
  push:
    branches: [ cosmosdb ]

jobs:
  testGeneral:
    name: General test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v5
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Test
      run: |
        go test -v -count 1 -p 1 -cover -coverprofile=coverage_general.txt .
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: general
        name: general

  testCosmosDbSql:
    name: Test with Azure Cosmos DB (SQL API)
    runs-on: windows-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v5
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: Test
      run: |
        choco install azure-cosmosdb-emulator
        & "C:\Program Files\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe"
        Start-Sleep -s 120
        try { Invoke-RestMethod -Method GET https://127.0.0.1:8081/ } catch {}
        netstat -nt
        $env:COSMOSDB_DRIVER='gocosmos'
        $env:COSMOSDB_URL='AccountEndpoint=https://127.0.0.1:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==;Db=godal'
        $env:TIMEZONE='Asia/Ho_Chi_Minh'
        go test -v -count 1 -p 1 -cover -coverprofile="coverage_cosmosdb_sql.txt" ./cosmosdbsql
    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: cosmosdb_sql
        name: cosmosdb_sql
